// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace OrganizationRegister.AcceptanceTests.Features.Organization
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class AddingOrganizationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddingOrganization.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AddingOrganization", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "AddingOrganization")))
            {
                OrganizationRegister.AcceptanceTests.Features.Organization.AddingOrganizationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Adding a company")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void AddingACompany()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding a company", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid from",
                        "Valid to",
                        "Finnish name abbreviation",
                        "Swedish name abbreviation"});
            table1.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "01.01.2015",
                        "01.01.2016",
                        "AFE",
                        "AFEsv"});
#line 4
 testRunner.When("the following company is added:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid from",
                        "Valid to",
                        "Finnish name abbreviation",
                        "Swedish name abbreviation"});
            table2.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "01.01.2015",
                        "01.01.2016",
                        "AFE",
                        "AFEsv"});
#line 7
 testRunner.Then("there are following organizations:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Adding a municipality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void AddingAMunicipality()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding a municipality", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Municipality code",
                        "Valid from"});
            table3.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Kunta",
                        "Turku",
                        "Åbo",
                        "853",
                        "01.02.2014"});
#line 13
 testRunner.When("the following municipality is added:", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Municipality code",
                        "Valid from"});
            table4.AddRow(new string[] {
                        "1069622-4",
                        "",
                        "Kunta",
                        "Kaarina",
                        "St. Karins",
                        "202",
                        "01.03.2014"});
#line 16
 testRunner.And("the following municipality is added:", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Municipality code",
                        "Valid from"});
            table5.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Kunta",
                        "Turku",
                        "Åbo",
                        "853",
                        "01.02.2014"});
            table5.AddRow(new string[] {
                        "1069622-4",
                        "",
                        "Kunta",
                        "Kaarina",
                        "St. Karins",
                        "202",
                        "01.03.2014"});
#line 19
 testRunner.Then("there are following organizations:", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Adding an organization with invalid business id")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void AddingAnOrganizationWithInvalidBusinessId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding an organization with invalid business id", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Municipality code"});
            table6.AddRow(new string[] {
                        "1234567-12",
                        "123456",
                        "Kunta",
                        "Turku",
                        "Åbo",
                        "853"});
#line 25
 testRunner.When("the following municipality is added:", ((string)(null)), table6, "When ");
#line 28
 testRunner.Then("Adding the organization fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Adding an organization with validity starting after it has ended")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void AddingAnOrganizationWithValidityStartingAfterItHasEnded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding an organization with validity starting after it has ended", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid from",
                        "Valid to"});
            table7.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "01.01.2017",
                        "01.01.2016"});
#line 31
 testRunner.When("the following company is added:", ((string)(null)), table7, "When ");
#line 34
 testRunner.Then("Adding the organization fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Adding two organizations with the same business id")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void AddingTwoOrganizationsWithTheSameBusinessId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding two organizations with the same business id", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description"});
            table8.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget"});
#line 37
 testRunner.Given("the following company is added:", ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Municipality code"});
            table9.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Kunta",
                        "Turku",
                        "Åbo",
                        "853"});
#line 40
 testRunner.When("the following municipality is added:", ((string)(null)), table9, "When ");
#line 43
 testRunner.Then("Adding the organization fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Adding a municipality with invalid id")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void AddingAMunicipalityWithInvalidId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding a municipality with invalid id", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Municipality code"});
            table10.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Kunta",
                        "Turku",
                        "Åbo",
                        "8533"});
#line 46
 testRunner.When("the following municipality is added:", ((string)(null)), table10, "When ");
#line 49
 testRunner.Then("Adding the organization fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Adding sub organizations")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void AddingSubOrganizations()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding sub organizations", ((string[])(null)));
#line 51
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description"});
            table11.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget"});
#line 52
 testRunner.Given("the following company is added:", ((string)(null)), table11, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid to"});
            table12.AddRow(new string[] {
                        "2352175-7",
                        "654321",
                        "Yritys",
                        "Karttakeskus",
                        "karta centrum",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "01.01.2074"});
#line 55
 testRunner.When("the following company is added as a sub organization of \'Affecto\'", ((string)(null)), table12, "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description"});
            table13.AddRow(new string[] {
                        "0140351-4",
                        "1234567",
                        "Yritys",
                        "Affecto Finland",
                        "Affecto Finland",
                        "Ohjelmistoyritys",
                        "Programvara företaget"});
#line 58
 testRunner.And("the following company is added as a sub organization of \'Affecto\'", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description"});
            table14.AddRow(new string[] {
                        "2352175-7",
                        "12",
                        "Yritys",
                        "Karttakeskus Helsinki",
                        "karta centrum Helsingfors",
                        "",
                        ""});
#line 61
 testRunner.And("the following company is added as a sub organization of \'Karttakeskus\'", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid to"});
            table15.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        ""});
            table15.AddRow(new string[] {
                        "2352175-7",
                        "654321",
                        "Yritys",
                        "Karttakeskus",
                        "karta centrum",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "01.01.2074"});
            table15.AddRow(new string[] {
                        "2352175-7",
                        "12",
                        "Yritys",
                        "Karttakeskus Helsinki",
                        "karta centrum Helsingfors",
                        "",
                        "",
                        ""});
            table15.AddRow(new string[] {
                        "0140351-4",
                        "1234567",
                        "Yritys",
                        "Affecto Finland",
                        "Affecto Finland",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        ""});
#line 64
 testRunner.Then("there are following organizations:", ((string)(null)), table15, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish name",
                        "Swedish name"});
            table16.AddRow(new string[] {
                        "Affecto",
                        "Affecto"});
#line 70
 testRunner.And("there are following main organizations:", ((string)(null)), table16, "And ");
#line 73
 testRunner.And("\'Karttakeskus\' is a sub organization of \'Affecto\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("\'Affecto Finland\' is a sub organization of \'Affecto\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("\'Karttakeskus Helsinki\' is a sub organization of \'Karttakeskus\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Sub organization doesn\'t need a business id")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "AddingOrganization")]
        public virtual void SubOrganizationDoesnTNeedABusinessId()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sub organization doesn\'t need a business id", ((string[])(null)));
#line 77
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description"});
            table17.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget"});
#line 78
 testRunner.Given("the following company is added:", ((string)(null)), table17, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description"});
            table18.AddRow(new string[] {
                        "",
                        "",
                        "",
                        "Yritys",
                        "Karttakeskus",
                        "karta centrum",
                        "Ohjelmistoyritys",
                        "Programvara företaget"});
#line 81
 testRunner.When("the following company is added as a sub organization of \'Affecto\'", ((string)(null)), table18, "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description"});
            table19.AddRow(new string[] {
                        "1234567-1",
                        "123456",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget"});
            table19.AddRow(new string[] {
                        "",
                        "",
                        "Yritys",
                        "Karttakeskus",
                        "karta centrum",
                        "Ohjelmistoyritys",
                        "Programvara företaget"});
#line 84
 testRunner.Then("there are following organizations:", ((string)(null)), table19, "Then ");
#line 88
 testRunner.And("\'Karttakeskus\' is a sub organization of \'Affecto\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
