// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace OrganizationRegister.AcceptanceTests.Features.Organization
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UpdatingOrganizationBasicInformationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UpdatingOrganizationBasicInformation.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UpdatingOrganizationBasicInformation", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "UpdatingOrganizationBasicInformation")))
            {
                OrganizationRegister.AcceptanceTests.Features.Organization.UpdatingOrganizationBasicInformationFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("there is an organization", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Changing organization basic information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void ChangingOrganizationBasicInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Changing organization basic information", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid from",
                        "Valid to",
                        "Finnish name abbreviation",
                        "Swedish name abbreviation",
                        "Can be added to FSC"});
            table1.AddRow(new string[] {
                        "1069622-4",
                        "654321",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "12.11.2015",
                        "20.10.2016",
                        "AFE",
                        "AFEsv",
                        "false"});
#line 7
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid from",
                        "Valid to",
                        "Finnish name abbreviation",
                        "Swedish name abbreviation",
                        "Can be added to FSC"});
            table2.AddRow(new string[] {
                        "1069622-4",
                        "654321",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "12.11.2015",
                        "20.10.2016",
                        "AFE",
                        "AFEsv",
                        "false"});
#line 10
 testRunner.Then("the organization has the following basic information:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Changing organization type to municipality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void ChangingOrganizationTypeToMunicipality()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Changing organization type to municipality", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Municipality code",
                        "Can be added to FSC"});
            table3.AddRow(new string[] {
                        "1069622-4",
                        "Kunta",
                        "Kaarina",
                        "202",
                        "false"});
#line 15
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Municipality code",
                        "Can be added to FSC"});
            table4.AddRow(new string[] {
                        "1069622-4",
                        "Kunta",
                        "Kaarina",
                        "202",
                        "false"});
#line 18
 testRunner.Then("the organization has the following basic information:", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Changing organization type from municipality")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void ChangingOrganizationTypeFromMunicipality()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Changing organization type from municipality", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Municipality code",
                        "Can be added to FSC"});
            table5.AddRow(new string[] {
                        "1069622-4",
                        "Kunta",
                        "Kaarina",
                        "202",
                        "false"});
#line 23
 testRunner.Given("the following basic information is set to the organization:", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Can be added to FSC"});
            table6.AddRow(new string[] {
                        "1069622-4",
                        "654321",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "true"});
#line 26
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Can be added to FSC"});
            table7.AddRow(new string[] {
                        "1069622-4",
                        "654321",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "true"});
#line 29
 testRunner.Then("the organization has the following basic information:", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting only mandatory organization basic information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void SettingOnlyMandatoryOrganizationBasicInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting only mandatory organization basic information", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table8.AddRow(new string[] {
                        "1234567-1",
                        "Yritys",
                        "Firma",
                        "true"});
#line 34
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table9.AddRow(new string[] {
                        "1234567-1",
                        "Yritys",
                        "Firma",
                        "true"});
#line 37
 testRunner.Then("the organization has the following basic information:", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Claering organization optional information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void ClaeringOrganizationOptionalInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Claering organization optional information", ((string[])(null)));
#line 41
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Oid",
                        "Type",
                        "Finnish name",
                        "Swedish name",
                        "Finnish description",
                        "Swedish description",
                        "Valid from",
                        "Valid to",
                        "Finnish name abbreviation",
                        "Swedish name abbreviation",
                        "Can be added to FSC"});
            table10.AddRow(new string[] {
                        "1069622-4",
                        "654321",
                        "Yritys",
                        "Affecto",
                        "Affecto",
                        "Ohjelmistoyritys",
                        "Programvara företaget",
                        "12.11.2015",
                        "20.10.2016",
                        "AFE",
                        "AFEsv",
                        "true"});
#line 42
 testRunner.Given("the following basic information is set to the organization:", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Finnish name abbreviation",
                        "Can be added to FSC"});
            table11.AddRow(new string[] {
                        "1234567-1",
                        "Yritys",
                        "Firma",
                        "AFEfi",
                        "false"});
#line 45
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Finnish name abbreviation",
                        "Can be added to FSC"});
            table12.AddRow(new string[] {
                        "1234567-1",
                        "Yritys",
                        "Firma",
                        "AFEfi",
                        "false"});
#line 48
 testRunner.Then("the organization has the following basic information:", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting invalid business identifier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void SettingInvalidBusinessIdentifier()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting invalid business identifier", ((string[])(null)));
#line 52
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table13.AddRow(new string[] {
                        "1069622-44",
                        "Yritys",
                        "Affecto",
                        "true"});
#line 53
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table13, "When ");
#line 56
 testRunner.Then("setting the basic information fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting a business identifier that is already used for a main organization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void SettingABusinessIdentifierThatIsAlreadyUsedForAMainOrganization()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting a business identifier that is already used for a main organization", ((string[])(null)));
#line 58
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Finnish name",
                        "Can be added to FSC"});
            table14.AddRow(new string[] {
                        "1069622-4",
                        "Affecto",
                        "true"});
#line 59
 testRunner.Given("the following company is added:", ((string)(null)), table14, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table15.AddRow(new string[] {
                        "1069622-4",
                        "Yritys",
                        "Affecto",
                        "true"});
#line 62
 testRunner.When("the following basic information is set to the previously added organization:", ((string)(null)), table15, "When ");
#line 65
 testRunner.Then("setting the basic information fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting a business identifier that is already used for a sub organization")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void SettingABusinessIdentifierThatIsAlreadyUsedForASubOrganization()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting a business identifier that is already used for a sub organization", ((string[])(null)));
#line 67
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Finnish name",
                        "Can be added to FSC"});
            table16.AddRow(new string[] {
                        "1069622-4",
                        "Affecto",
                        "true"});
#line 68
 testRunner.Given("the following company is added:", ((string)(null)), table16, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Finnish name"});
            table17.AddRow(new string[] {
                        "1234567-1",
                        "Affecto Finland Oy"});
#line 71
 testRunner.And("the following company is added as a sub organization of \'Affecto\'", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table18.AddRow(new string[] {
                        "1069622-4",
                        "Yritys",
                        "Affecto Finland Oy",
                        "true"});
#line 74
 testRunner.When("the following basic information is set to organization \'Affecto Finland Oy\':", ((string)(null)), table18, "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table19.AddRow(new string[] {
                        "1069622-4",
                        "Yritys",
                        "Affecto Finland Oy",
                        "true"});
#line 77
 testRunner.Then("the organization \'Affecto Finland Oy\' has the following basic information:", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Clearing a sub organization business identifier")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void ClearingASubOrganizationBusinessIdentifier()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Clearing a sub organization business identifier", ((string[])(null)));
#line 81
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Finnish name",
                        "Can be added to FSC"});
            table20.AddRow(new string[] {
                        "1069622-4",
                        "Affecto",
                        "true"});
#line 82
 testRunner.Given("the following company is added:", ((string)(null)), table20, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Finnish name"});
            table21.AddRow(new string[] {
                        "1234567-1",
                        "Affecto Finland Oy"});
#line 85
 testRunner.And("the following company is added as a sub organization of \'Affecto\'", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table22.AddRow(new string[] {
                        "",
                        "Yritys",
                        "Affecto Finland Oy",
                        "true"});
#line 88
 testRunner.When("the following basic information is set to organization \'Affecto Finland Oy\':", ((string)(null)), table22, "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Can be added to FSC"});
            table23.AddRow(new string[] {
                        "",
                        "Yritys",
                        "Affecto Finland Oy",
                        "true"});
#line 91
 testRunner.Then("the organization \'Affecto Finland Oy\' has the following basic information:", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting invalid municipality code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void SettingInvalidMunicipalityCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting invalid municipality code", ((string[])(null)));
#line 95
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Municipality code",
                        "Can be added to FSC"});
            table24.AddRow(new string[] {
                        "1069622-4",
                        "Kunta",
                        "Kaarina",
                        "2002",
                        "true"});
#line 96
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table24, "When ");
#line 99
 testRunner.Then("setting the basic information fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting invalid validity")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationBasicInformation")]
        public virtual void SettingInvalidValidity()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting invalid validity", ((string[])(null)));
#line 101
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Business id",
                        "Type",
                        "Finnish name",
                        "Valid from",
                        "Valid to",
                        "Can be added to FSC"});
            table25.AddRow(new string[] {
                        "1069622-4",
                        "Yritys",
                        "Affecto",
                        "01.01.2012",
                        "01.01.2010",
                        "true"});
#line 102
 testRunner.When("the following basic information is set to the organization:", ((string)(null)), table25, "When ");
#line 105
 testRunner.Then("setting the basic information fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
