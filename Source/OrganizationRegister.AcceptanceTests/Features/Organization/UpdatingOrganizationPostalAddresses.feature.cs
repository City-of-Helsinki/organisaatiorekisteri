// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace OrganizationRegister.AcceptanceTests.Features.Organization
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UpdatingOrganizationPostalAddressesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UpdatingOrganizationPostalAddresses.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UpdatingOrganizationPostalAddresses", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "UpdatingOrganizationPostalAddresses")))
            {
                OrganizationRegister.AcceptanceTests.Features.Organization.UpdatingOrganizationPostalAddressesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("there is an organization", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting a street address as organization postal address")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingAStreetAddressAsOrganizationPostalAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting a street address as organization postal address", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code"});
            table1.AddRow(new string[] {
                        "Helsingintie 15",
                        "Helsinforsvägen 15",
                        "Turku",
                        "Åbo",
                        "21500"});
#line 7
 testRunner.When("the following postal street address is set to the organization:", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code"});
            table2.AddRow(new string[] {
                        "Helsingintie 15",
                        "Helsinforsvägen 15",
                        "Turku",
                        "Åbo",
                        "21500"});
#line 10
 testRunner.Then("the organization has the following postal street address:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting a street address as organization postal address again")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingAStreetAddressAsOrganizationPostalAddressAgain()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting a street address as organization postal address again", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code"});
            table3.AddRow(new string[] {
                        "Helsingintie 15",
                        "Helsinforsvägen 15",
                        "Turku",
                        "Åbo",
                        "21500"});
#line 15
 testRunner.Given("the following postal street address is set to the organization:", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code"});
            table4.AddRow(new string[] {
                        "Helsinginkatu 15",
                        "Helsinforsgatan 15",
                        "Turku",
                        "Åbo",
                        "25100"});
#line 18
 testRunner.When("the following postal street address is set to the organization:", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code"});
            table5.AddRow(new string[] {
                        "Helsinginkatu 15",
                        "Helsinforsgatan 15",
                        "Turku",
                        "Åbo",
                        "25100"});
#line 21
 testRunner.Then("the organization has the following postal street address:", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Organization can have no postal address")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void OrganizationCanHaveNoPostalAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Organization can have no postal address", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 26
 testRunner.When("postal address of the organization is set as empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("the organization has no postal address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting invalid street address postal code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingInvalidStreetAddressPostalCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting invalid street address postal code", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code"});
            table6.AddRow(new string[] {
                        "Helsinginkatu 15",
                        "Helsinforsgatan 15",
                        "Turku",
                        "Åbo",
                        "251000"});
#line 30
 testRunner.When("the following postal street address is set to the organization:", ((string)(null)), table6, "When ");
#line 33
 testRunner.Then("setting the postal address fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting a post office box address as organization postal address")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingAPostOfficeBoxAddressAsOrganizationPostalAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting a post office box address as organization postal address", ((string[])(null)));
#line 35
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code",
                        "post office box"});
            table7.AddRow(new string[] {
                        "Turku",
                        "Åbo",
                        "21501",
                        "10"});
#line 36
 testRunner.When("the following postal post office box address is set to the organization:", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code",
                        "post office box"});
            table8.AddRow(new string[] {
                        "Turku",
                        "Åbo",
                        "21501",
                        "10"});
#line 39
 testRunner.Then("the organization has the following postal post office box address:", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting a post office box address as organization postal address again")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingAPostOfficeBoxAddressAsOrganizationPostalAddressAgain()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting a post office box address as organization postal address again", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code",
                        "post office box"});
            table9.AddRow(new string[] {
                        "Turku",
                        "Åbo",
                        "21501",
                        "10"});
#line 44
 testRunner.Given("the following postal post office box address is set to the organization:", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code",
                        "post office box"});
            table10.AddRow(new string[] {
                        "Turku",
                        "Åbo",
                        "25101",
                        "11"});
#line 47
 testRunner.When("the following postal post office box address is set to the organization:", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code",
                        "post office box"});
            table11.AddRow(new string[] {
                        "Turku",
                        "Åbo",
                        "25101",
                        "11"});
#line 50
 testRunner.Then("the organization has the following postal post office box address:", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting invalid post office box address postal code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingInvalidPostOfficeBoxAddressPostalCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting invalid post office box address postal code", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code",
                        "post office box"});
            table12.AddRow(new string[] {
                        "Turku",
                        "Åbo",
                        "251000",
                        "10"});
#line 55
 testRunner.When("the following postal post office box address is set to the organization:", ((string)(null)), table12, "When ");
#line 58
 testRunner.Then("setting the postal address fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting invalid post office box")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingInvalidPostOfficeBox()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting invalid post office box", ((string[])(null)));
#line 60
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish postal district",
                        "Swedish postal district",
                        "Postal code",
                        "post office box"});
            table13.AddRow(new string[] {
                        "Turku",
                        "Åbo",
                        "25101",
                        "o"});
#line 61
 testRunner.When("the following postal post office box address is set to the organization:", ((string)(null)), table13, "When ");
#line 64
 testRunner.Then("setting the postal address fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Setting both street and post office box organization postal address")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void SettingBothStreetAndPostOfficeBoxOrganizationPostalAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Setting both street and post office box organization postal address", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish street address postal district",
                        "Swedish street address postal district",
                        "Street address postal code",
                        "post office box",
                        "Finnish post office box address postal district",
                        "Swedish post office box address postal district",
                        "post office box address postal code"});
            table14.AddRow(new string[] {
                        "Helsinginkatu 15",
                        "Helsinforsgatan 15",
                        "Turku",
                        "Åbo",
                        "25100",
                        "11",
                        "Turku",
                        "Åbo",
                        "25101"});
#line 67
 testRunner.When("the following postal address is set to the organization:", ((string)(null)), table14, "When ");
#line 70
 testRunner.Then("setting the postal address fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Using organization visiting address as the postal address")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void UsingOrganizationVisitingAddressAsThePostalAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Using organization visiting address as the postal address", ((string[])(null)));
#line 72
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Finnish qualifier",
                        "Swedish qualifier",
                        "Postal code"});
            table15.AddRow(new string[] {
                        "Helsingintie 15",
                        "Helsinforsvägen 15",
                        "Turku",
                        "Åbo",
                        "Vaaleanpunaisen possun vieressä",
                        "Nära svin",
                        "21500"});
#line 73
 testRunner.Given("the following visiting address is set to the organization:", ((string)(null)), table15, "Given ");
#line 76
 testRunner.When("the postal address of the organization is set to be the same as the visting addre" +
                    "ss", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.Then("the postal address of the organization is the same as the visiting address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Using organization visiting address as the postal address when there is no visiti" +
            "ng address")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void UsingOrganizationVisitingAddressAsThePostalAddressWhenThereIsNoVisitingAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Using organization visiting address as the postal address when there is no visiti" +
                    "ng address", ((string[])(null)));
#line 79
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 80
 testRunner.When("the postal address of the organization is set to be the same as the visting addre" +
                    "ss", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 81
 testRunner.Then("setting the postal address fails", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Cleared visiting address cannot be used as a postal address")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "UpdatingOrganizationPostalAddresses")]
        public virtual void ClearedVisitingAddressCannotBeUsedAsAPostalAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cleared visiting address cannot be used as a postal address", ((string[])(null)));
#line 83
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Finnish street address",
                        "Swedish street address",
                        "Finnish postal district",
                        "Swedish postal district",
                        "Finnish qualifier",
                        "Swedish qualifier",
                        "Postal code"});
            table16.AddRow(new string[] {
                        "Helsingintie 15",
                        "Helsinforsvägen 15",
                        "Turku",
                        "Åbo",
                        "Vaaleanpunaisen possun vieressä",
                        "Nära svin",
                        "21500"});
#line 84
 testRunner.Given("the following visiting address is set to the organization:", ((string)(null)), table16, "Given ");
#line 87
 testRunner.And("the postal address of the organization is set to be the same as the visting addre" +
                    "ss", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.When("visiting address of the organization is set as empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
 testRunner.Then("the postal address of the organization is not the same as the visiting address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
